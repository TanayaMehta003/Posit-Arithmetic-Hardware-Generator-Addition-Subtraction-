// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module decoder_decoder_Pipeline_decoder_label2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        expo1_V,
        exponent1_out,
        exponent1_out_ap_vld,
        grp_fu_417_p_din0,
        grp_fu_417_p_din1,
        grp_fu_417_p_opcode,
        grp_fu_417_p_dout0,
        grp_fu_417_p_ce,
        grp_fu_425_p_din0,
        grp_fu_425_p_din1,
        grp_fu_425_p_dout0,
        grp_fu_425_p_ce,
        grp_fu_1675_p_din0,
        grp_fu_1675_p_dout0,
        grp_fu_1675_p_ce,
        grp_pow_generic_double_s_fu_1678_p_din1,
        grp_pow_generic_double_s_fu_1678_p_dout0,
        grp_pow_generic_double_s_fu_1678_p_start,
        grp_pow_generic_double_s_fu_1678_p_ready,
        grp_pow_generic_double_s_fu_1678_p_done,
        grp_pow_generic_double_s_fu_1678_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] expo1_V;
output  [31:0] exponent1_out;
output   exponent1_out_ap_vld;
output  [63:0] grp_fu_417_p_din0;
output  [63:0] grp_fu_417_p_din1;
output  [1:0] grp_fu_417_p_opcode;
input  [63:0] grp_fu_417_p_dout0;
output   grp_fu_417_p_ce;
output  [63:0] grp_fu_425_p_din0;
output  [63:0] grp_fu_425_p_din1;
input  [63:0] grp_fu_425_p_dout0;
output   grp_fu_425_p_ce;
output  [31:0] grp_fu_1675_p_din0;
input  [63:0] grp_fu_1675_p_dout0;
output   grp_fu_1675_p_ce;
output  [63:0] grp_pow_generic_double_s_fu_1678_p_din1;
input  [63:0] grp_pow_generic_double_s_fu_1678_p_dout0;
output   grp_pow_generic_double_s_fu_1678_p_start;
input   grp_pow_generic_double_s_fu_1678_p_ready;
input   grp_pow_generic_double_s_fu_1678_p_done;
input   grp_pow_generic_double_s_fu_1678_p_idle;

reg ap_idle;
reg exponent1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state32_pp0_stage15_iter1;
wire    ap_block_state48_pp0_stage15_iter2;
wire    ap_block_pp0_stage15_subdone;
reg   [0:0] icmp_ln111_reg_358;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_115;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
wire    ap_block_state38_pp0_stage5_iter2;
wire    ap_block_state54_pp0_stage5_iter3;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
wire    ap_block_state39_pp0_stage6_iter2;
wire    ap_block_state55_pp0_stage6_iter3;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_state33_pp0_stage0_iter2;
wire    ap_block_state49_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] y_3_reg_352;
reg   [1:0] y_3_reg_352_pp0_iter1_reg;
wire   [0:0] icmp_ln111_fu_134_p2;
reg   [0:0] icmp_ln111_reg_358_pp0_iter1_reg;
reg   [0:0] icmp_ln111_reg_358_pp0_iter2_reg;
wire   [31:0] y_cast_fu_140_p1;
wire   [0:0] p_Result_s_fu_173_p2;
reg   [0:0] p_Result_s_reg_367;
wire   [31:0] zext_ln113_fu_179_p1;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_state34_pp0_stage1_iter2;
wire    ap_block_state50_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] tmp_reg_377;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
wire    ap_block_state41_pp0_stage8_iter2;
wire    ap_block_state57_pp0_stage8_iter3;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
wire    ap_block_state43_pp0_stage10_iter2;
wire    ap_block_pp0_stage10_11001;
reg   [63:0] mul_reg_387;
wire    ap_block_pp0_stage15_11001;
reg   [63:0] conv2_reg_392;
reg   [63:0] dc_reg_397;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
wire    ap_block_state40_pp0_stage7_iter2;
wire    ap_block_state56_pp0_stage7_iter3;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] p_Result_44_reg_402;
wire   [31:0] val_fu_304_p3;
reg   [31:0] val_reg_407;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
wire    ap_block_state42_pp0_stage9_iter2;
wire    ap_block_state58_pp0_stage9_iter3;
wire    ap_block_pp0_stage9_subdone;
wire    grp_pow_generic_double_s_fu_93_ap_ready;
reg    grp_pow_generic_double_s_fu_93_ap_start_reg;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
reg   [1:0] y_fu_72;
wire   [1:0] y_4_fu_145_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_y_3;
reg   [31:0] exponent1_fu_76;
wire   [31:0] result_V_fu_317_p3;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage9_01001;
reg   [31:0] grp_fu_112_p0;
wire    ap_block_pp0_stage15;
wire   [0:0] trunc_ln779_fu_155_p1;
wire   [1:0] zext_ln779_fu_158_p1;
wire   [1:0] shl_ln779_fu_162_p2;
wire   [1:0] and_ln779_fu_168_p2;
wire    ap_block_pp0_stage8;
wire   [63:0] data_V_fu_187_p1;
wire   [51:0] p_Result_45_fu_208_p1;
wire   [53:0] mantissa_fu_212_p4;
wire   [10:0] xs_exp_V_fu_198_p4;
wire   [11:0] zext_ln515_fu_226_p1;
wire   [11:0] add_ln515_fu_230_p2;
wire   [10:0] sub_ln1512_fu_244_p2;
wire   [0:0] isNeg_fu_236_p3;
wire  signed [11:0] sext_ln1512_fu_250_p1;
wire   [11:0] ush_fu_254_p3;
wire  signed [31:0] sext_ln1488_fu_262_p1;
wire   [136:0] zext_ln15_fu_222_p1;
wire   [136:0] zext_ln1488_fu_266_p1;
wire   [136:0] r_V_fu_270_p2;
wire   [0:0] tmp_22_fu_282_p3;
wire   [136:0] r_V_21_fu_276_p2;
wire   [31:0] zext_ln818_fu_290_p1;
wire   [31:0] tmp_s_fu_294_p4;
wire   [31:0] result_V_4_fu_312_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage9;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_state35_pp0_stage2_iter2;
wire    ap_block_state51_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_state36_pp0_stage3_iter2;
wire    ap_block_state52_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_state37_pp0_stage4_iter2;
wire    ap_block_state53_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
wire    ap_block_state44_pp0_stage11_iter2;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
wire    ap_block_state45_pp0_stage12_iter2;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
wire    ap_block_state46_pp0_stage13_iter2;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state31_pp0_stage14_iter1;
wire    ap_block_state47_pp0_stage14_iter2;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_pow_generic_double_s_fu_93_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

decoder_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_double_s_fu_93_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln111_reg_358 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_pow_generic_double_s_fu_93_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_double_s_fu_93_ap_ready == 1'b1)) begin
            grp_pow_generic_double_s_fu_93_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage9))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage9))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exponent1_fu_76 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        exponent1_fu_76 <= result_V_fu_317_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_fu_72 <= 2'd0;
    end else if (((icmp_ln111_reg_358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        y_fu_72 <= y_4_fu_145_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        conv2_reg_392 <= grp_fu_1675_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        dc_reg_397 <= grp_fu_417_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln111_reg_358 <= icmp_ln111_fu_134_p2;
        icmp_ln111_reg_358_pp0_iter1_reg <= icmp_ln111_reg_358;
        icmp_ln111_reg_358_pp0_iter2_reg <= icmp_ln111_reg_358_pp0_iter1_reg;
        p_Result_s_reg_367 <= p_Result_s_fu_173_p2;
        y_3_reg_352 <= ap_sig_allocacmp_y_3;
        y_3_reg_352_pp0_iter1_reg <= y_3_reg_352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul_reg_387 <= grp_fu_425_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        p_Result_44_reg_402 <= data_V_fu_187_p1[32'd63];
        tmp_reg_377 <= grp_pow_generic_double_s_fu_1678_p_dout0;
        val_reg_407 <= val_fu_304_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln111_reg_358 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_115 <= grp_fu_1675_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln111_reg_358 == 1'd1) & (1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln111_reg_358_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage9 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_3 = 2'd0;
    end else begin
        ap_sig_allocacmp_y_3 = y_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln111_reg_358_pp0_iter2_reg == 1'd1))) begin
        exponent1_out_ap_vld = 1'b1;
    end else begin
        exponent1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_112_p0 = exponent1_fu_76;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_112_p0 = zext_ln113_fu_179_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_112_p0 = y_cast_fu_140_p1;
    end else begin
        grp_fu_112_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage9))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln515_fu_230_p2 = ($signed(zext_ln515_fu_226_p1) + $signed(12'd3073));

assign and_ln779_fu_168_p2 = (shl_ln779_fu_162_p2 & expo1_V);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign data_V_fu_187_p1 = dc_reg_397;

assign exponent1_out = exponent1_fu_76;

assign grp_fu_1675_p_ce = 1'b1;

assign grp_fu_1675_p_din0 = grp_fu_112_p0;

assign grp_fu_417_p_ce = 1'b1;

assign grp_fu_417_p_din0 = conv2_reg_392;

assign grp_fu_417_p_din1 = mul_reg_387;

assign grp_fu_417_p_opcode = 2'd0;

assign grp_fu_425_p_ce = 1'b1;

assign grp_fu_425_p_din0 = reg_115;

assign grp_fu_425_p_din1 = tmp_reg_377;

assign grp_pow_generic_double_s_fu_1678_p_din1 = reg_115;

assign grp_pow_generic_double_s_fu_1678_p_start = grp_pow_generic_double_s_fu_93_ap_start_reg;

assign grp_pow_generic_double_s_fu_93_ap_ready = grp_pow_generic_double_s_fu_1678_p_ready;

assign icmp_ln111_fu_134_p2 = ((ap_sig_allocacmp_y_3 == 2'd2) ? 1'b1 : 1'b0);

assign isNeg_fu_236_p3 = add_ln515_fu_230_p2[32'd11];

assign mantissa_fu_212_p4 = {{{{1'd1}, {p_Result_45_fu_208_p1}}}, {1'd0}};

assign p_Result_45_fu_208_p1 = data_V_fu_187_p1[51:0];

assign p_Result_s_fu_173_p2 = ((and_ln779_fu_168_p2 != 2'd0) ? 1'b1 : 1'b0);

assign r_V_21_fu_276_p2 = zext_ln15_fu_222_p1 << zext_ln1488_fu_266_p1;

assign r_V_fu_270_p2 = zext_ln15_fu_222_p1 >> zext_ln1488_fu_266_p1;

assign result_V_4_fu_312_p2 = (32'd0 - val_reg_407);

assign result_V_fu_317_p3 = ((p_Result_44_reg_402[0:0] == 1'b1) ? result_V_4_fu_312_p2 : val_reg_407);

assign sext_ln1488_fu_262_p1 = $signed(ush_fu_254_p3);

assign sext_ln1512_fu_250_p1 = $signed(sub_ln1512_fu_244_p2);

assign shl_ln779_fu_162_p2 = 2'd1 << zext_ln779_fu_158_p1;

assign sub_ln1512_fu_244_p2 = (11'd1023 - xs_exp_V_fu_198_p4);

assign tmp_22_fu_282_p3 = r_V_fu_270_p2[32'd53];

assign tmp_s_fu_294_p4 = {{r_V_21_fu_276_p2[84:53]}};

assign trunc_ln779_fu_155_p1 = y_3_reg_352_pp0_iter1_reg[0:0];

assign ush_fu_254_p3 = ((isNeg_fu_236_p3[0:0] == 1'b1) ? sext_ln1512_fu_250_p1 : add_ln515_fu_230_p2);

assign val_fu_304_p3 = ((isNeg_fu_236_p3[0:0] == 1'b1) ? zext_ln818_fu_290_p1 : tmp_s_fu_294_p4);

assign xs_exp_V_fu_198_p4 = {{data_V_fu_187_p1[62:52]}};

assign y_4_fu_145_p2 = (y_3_reg_352 + 2'd1);

assign y_cast_fu_140_p1 = ap_sig_allocacmp_y_3;

assign zext_ln113_fu_179_p1 = p_Result_s_reg_367;

assign zext_ln1488_fu_266_p1 = $unsigned(sext_ln1488_fu_262_p1);

assign zext_ln15_fu_222_p1 = mantissa_fu_212_p4;

assign zext_ln515_fu_226_p1 = xs_exp_V_fu_198_p4;

assign zext_ln779_fu_158_p1 = trunc_ln779_fu_155_p1;

assign zext_ln818_fu_290_p1 = tmp_22_fu_282_p3;

endmodule //decoder_decoder_Pipeline_decoder_label2
